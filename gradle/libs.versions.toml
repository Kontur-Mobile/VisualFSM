[versions]
kotlin = "1.9.22"
coroutines = "1.8.0"
rxJava2 = "2.2.21"
rxJava3 = "3.1.8"
junitJupiter = "5.10.2"
ksp = "1.9.22-1.0.17"
kotlinPoet = "1.16.0"
kotlinCompileTesting = "1.5.0"
dokka = "1.9.20"
atomicfu = "0.23.2"

[libraries]
junit-bom = { module = "org.junit:junit-bom", version.ref = "junitJupiter" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version = "" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junitJupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junitJupiter" }
junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junitJupiter" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
ksp-symbol-processing-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinPoet" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinPoet" }
kotlin-compile-testing = { module = "com.github.tschuchortdev:kotlin-compile-testing", version.ref = "kotlinCompileTesting" }
kotlin-compile-testing-ksp = { module = "com.github.tschuchortdev:kotlin-compile-testing-ksp", version.ref = "kotlinCompileTesting" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version = "" }

rxJava2 = { module = "io.reactivex.rxjava2:rxjava", version.ref = "rxJava2" }
rxJava3 = { module = "io.reactivex.rxjava3:rxjava", version.ref = "rxJava3" }

dokka-gradle-plugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
atomicfu-gradle-plugin = { module = "org.jetbrains.kotlinx:atomicfu-gradle-plugin", version.ref = "atomicfu" }
kotlin-gradle-plugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }

[plugins]
multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }