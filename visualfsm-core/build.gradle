plugins {
    id 'org.jetbrains.kotlin.multiplatform'
}

group = artifactsGroup
version = artifactsBuildVersion

kotlin {
    jvm {
        compilations.all {
            kotlinOptions.jvmTarget = '1.8'
        }
        withJava()
        testRuns["test"].executionTask.configure {
            useJUnitPlatform()
        }
    }
    js(BOTH) {
        browser {
            commonWebpackConfig {
                cssSupport.enabled = true
            }
        }
    }
    iosArm32()
    iosArm64()
    iosX64()
    iosSimulatorArm64()

    def hostOs = System.getProperty("os.name")
    def isMingwX64 = hostOs.startsWith("Windows")
    def nativeTarget
    if (hostOs == "Mac OS X") nativeTarget = macosX64('native')
    else if (hostOs == "Linux") nativeTarget = linuxX64("native")
    else if (isMingwX64) nativeTarget = mingwX64("native")
    else throw new GradleException("Host OS is not supported in Kotlin/Native.")


    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
                implementation "org.jetbrains.kotlinx:atomicfu:$atomicfu_version"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test')
            }
        }
        jvmMain {

        }
        jvmTest {

        }
        jsMain {
            dependencies {
                implementation(npm("uuid", "9.0.0"))
            }
        }
        jsTest {

        }
        nativeMain {
            dependencies {
                implementation "app.softwork:kotlinx-uuid-core:$UUUIDCoreVersion"
            }
        }
        nativeTest {

        }
    }
}

apply from: '../publish.gradle'